{
  "hash": "a4827e7556f79c1788c0a259e3101959",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Visualizing Dose Exposure Response\"\nauthor: \"Samer Mouksassi\"\ndate: \"2025-08-18\"\ncategories: [news, visualization]\nimage: \"erplot.png\"\nformat:\n html:\n  code-fold: true\n---\n\nIn this post I will provide the code and thinking process behind the figure shared in the last blog post. We will start with a simpler version where we show the Endpoint versus exposures, which in this case are areas under the drug concentrations curves (AUC) on top. And at the bottom, the individual AUCs by dose level with a different symbol by responder status: responder (as triangles) and not responder (as circles).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(tidyr)\nlibrary(dplyr)\nlibrary(ggquickeda)\nlibrary(patchwork)\nlibrary(ggridges)\nlibrary(ggrepel)\n\nICGI<- read.csv(\"ICGI.csv\")\nICGI$responder <- ifelse(ICGI$ICGI==1,\"responder\",\n                         \"not responder\")\nICGI$DOSE <- as.factor(ICGI$DOSE)\nICGI$DOSE <- factor(ICGI$DOSE,\n                    levels=c(\"0\", \"600\", \"1200\",\"1800\",\"2400\"),\n                    labels=c(\"Placebo\", \"600 mg\", \"1200 mg\",\"1800 mg\",\"2400 mg\"))\np1 <-  ggplot(ICGI, aes(AUC, ICGI)) +\n  geom_point(\n    aes(shape=responder),\n    position = position_jitter(height = 0.08),\n    size = 3,\n    alpha = 0.2\n  ) +\n  geom_smooth(\n    method = \"glm\",\n    method.args = list(family = \"binomial\"),\n    se = TRUE\n  ) +\n  theme_bw(base_size = 16) +\n  guides(shape=guide_legend(reverse=TRUE))+\n  labs(x=\"AUC (µg*h/mL)\",y=\"Probability of Endpoint\", shape = \"\")\n\np2 <-\n  ggplot(ICGI, aes(AUC, DOSE)) +\n  geom_point(\n    data = ICGI[ICGI$responder == \"responder\", ],\n    position = position_nudge(y = -0.25),\n    size = 3,\n    alpha = 0.2,\n    shape = \"circle\"\n  ) +\n  geom_point(\n    data = ICGI[ICGI$responder != \"responder\", ],\n    position = position_nudge(y = 0.25),\n    size = 3,\n    alpha = 0.2,\n    shape = \"triangle\"\n  ) +\n  theme_bw(base_size = 16) +\n  labs(y = \"Dose\")\n(p1+\ntheme(legend.position = \"inside\",\n      legend.position.inside = c(0.8,0.55),\n      legend.background = element_rect(fill = \"transparent\",\n                                       colour = \"black\"),\n      legend.title = element_blank(),\n  axis.text.x.bottom = element_blank(),\n      axis.title.x.bottom = element_blank())+\n  scale_y_continuous(breaks= seq(0,1,0.2),\n                     labels = scales::percent_format())\n  )/(p2+\n  scale_x_continuous(breaks= seq(0,400,50))+\n  labs(x=\"AUC (µg*h/mL)\",shape =\"\"))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::\n\n\nWith this visual representation several questions remain without an answer:\n\n-   What is the probability of response by dose level?\n\n-   What is the probability of response by tertiles or quartiles of exposures ? and how about the Placebo (exposure = 0) response?\n\nWe will answer these questions incrementally. First we reshape the data into long format to accomodate the possibility of multiple endpoints and multiple exposure metrics. Second we compute the quartiles of exposures by exposure metric and endpoint, keeping the Placebo separate. Then we add the variable exptile that will assign to each exposure one of the following values: \"Placebo\", \"Q1\", \"Q2\", \"Q3\", \"Q4\". We also compute the exposure limits that can be used in the graph to show the limits of each quartile.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexposure_metric_plac_value <- 0\n# compute quantiles and assign each exposure to its corresponding exptile\nICGIlong <- ICGI %>% \n  gather(Endpoint,response,ICGI)    %>% # can handle multiple endpoints at the same time \n  gather(expname,expvalue,AUC,CMAX) %>% # can handle multiple exposures at the same time\n  group_by(Endpoint,expname) %>% \n  mutate( Q25     = quantile(expvalue[!expvalue %in% c(exposure_metric_plac_value)], 0.25, na.rm = TRUE), \n          Q50     = quantile(expvalue[!expvalue %in% c(exposure_metric_plac_value)], 0.50, na.rm = TRUE), \n          Q75     = quantile(expvalue[!expvalue %in% c(exposure_metric_plac_value)], 0.75, na.rm = TRUE), \n          exptile = case_when(expvalue == exposure_metric_plac_value ~ \"Placebo\",\n                            expvalue > exposure_metric_plac_value & expvalue <= Q25\n                                                               ~ \"Q1\",\n                            expvalue >  Q25 & expvalue <=  Q50 ~ \"Q2\",\n                            expvalue >  Q50 & expvalue <= Q75  ~ \"Q3\",\n                            expvalue >  Q75                    ~ \"Q4\"))\n\nexposurelimits <- ICGIlong %>% \n  group_by(expname, Endpoint)%>% \n  reframe(intercept = quantile(expvalue[!expvalue %in%\n                         c( exposure_metric_plac_value)], \n                         c(0, 0.25, 0.5, 0.75, 1), na.rm = TRUE),\n              quant =    c(0,0.25, 0.5, 0.75, 1))\n```\n:::\n\nWe prepare the distributions plot beneath the probability of response curve by using ggridges, constructing a numrical value for where to plot the distributions and by excluding the Placebo from the distributions plot. The distributions are shown as densities scaled to 1 with quantiles lines at 10th, 25th 50th, 75th and 90th percentiles.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#these values will become an argument in the ER function\n  dist_position_scaler = 0.2\n  dist_offset = 0\n  dist_scale = 0.9\nICGIlong$keynumeric <- -dist_position_scaler * as.numeric(\n    forcats::fct_rev(as.factor(dplyr::pull(ICGIlong[,\"DOSE\"])))) + dist_offset\n  \np1 <- ggplot(ICGIlong, aes(expvalue,response) )+\n  geom_point(aes(col=DOSE))+\n  geom_hline(yintercept=c(0,1),col=\"darkgray\")+\n  geom_vline(data=exposurelimits,aes(xintercept = intercept),col=\"lightgray\",\n             linetype=\"dashed\")+\n   geom_text(data=exposurelimits,\n             aes(x = intercept,y=Inf,label=round(intercept,1)),col=\"lightgray\",\n             vjust=1)+\n  geom_smooth(method=\"glm\",\n              method.args = list(family = \"binomial\"),\n              color=\"black\",aes(fill=\"logistic fit (95%CI)\"))+\n  geom_density_ridges(data=ICGIlong %>% \n                        filter(DOSE!=\"Placebo\"),\n                      aes(expvalue,y=keynumeric,\n                          group=DOSE,col=DOSE,\n                          height = after_stat(ndensity)),\n                      rel_min_height = 0.005,alpha=0.1,scale = dist_scale,\n                      quantile_lines = TRUE, quantiles = c(0.1,0.25, 0.5, 0.75,0.9))+\n   geom_point(data=ICGIlong%>% \n                        filter(DOSE!=\"Placebo\"), aes(expvalue,y=keynumeric-0.025,col=DOSE),alpha = 0.2)+\n  facet_grid(~expname,scales=\"free_x\")+\n  ggthemes::scale_color_tableau()+\n  scale_fill_manual(values=\"gray\")+\n  labs(fill=\"\")+\n  theme_bw()+\n  theme(legend.position = \"top\")+\n  guides(fill  = guide_legend(order = 1),\n         color = guide_legend(order = 2, nrow=2, reverse = TRUE))\n```\n:::\n\nNext we compute the probabilities of response by exposures quartiles and by dose levels and add it to the plot using `geom_pointrange`\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary_df <- function (x, y, probs = c(0.1, 0.25, 0.75, 0.9), continuous = FALSE) \n{\n    tibble::tibble(minexp = min(x),\n                   maxexp = max(x),\n                   medexp = median(x), \n        meanexp = mean(x),\n        N = ifelse(!continuous, sum(y, na.rm = TRUE), \n            n()),\n        Nmiss = length(x[is.na(x)]),\n        Ntot = dplyr::n(), \n        meanresp = ifelse(!continuous, N/Ntot, mean(y, na.rm = TRUE)), \n        prob = meanresp,\n        SE = ifelse(!continuous,\n            sqrt(meanresp * (1 - meanresp)/Ntot),\n            sd(y, na.rm = TRUE)/sqrt(Ntot)), \n        values = quantile(x, probs, na.rm = TRUE), quant = probs)\n}\n\nICGIlong.summaries.dose <- ICGIlong %>% \n    group_by(Endpoint,expname,DOSE,keynumeric) %>% \n    reframe(summary_df(expvalue,response))%>% \n  pivot_wider(names_from = quant, \n  values_from = values, names_glue = \"quant_{100*quant}\")\n  \n  ICGIlong.summaries.exposure <- ICGIlong %>% \n    ungroup() %>% \n    group_by(Endpoint,expname,exptile) %>% \n    reframe(summary_df(expvalue,response))%>% \n  pivot_wider(names_from = quant, \n  values_from = values, names_glue = \"quant_{100*quant}\")\n  \n\np2 <- p1 +\n   geom_linerange(data=ICGIlong.summaries.dose,\n                  aes(x=medexp,xmin = quant_10,xmax = quant_90,\n                      y=keynumeric+0.025,col=DOSE),\n                  linewidth = 2, alpha = 0.4)+\n   geom_linerange(data=ICGIlong.summaries.dose,\n                  aes(x=medexp,xmin = quant_25,xmax = quant_75,\n                      y=keynumeric+0.025,col=DOSE),\n                  linewidth = 2.5, alpha = 0.4)+\n   geom_point(data=ICGIlong.summaries.dose,\n                  aes(x=medexp,\n                      y=keynumeric+0.025,col=DOSE),\n                  size = 3, alpha = 0.2)+\n  geom_pointrange(data=ICGIlong.summaries.dose,\n                  alpha=0.4,\n                  aes(x= medexp, y = meanresp,\n                      ymin =meanresp-1.96*SE,\n                      ymax =meanresp+1.96*SE,\n                      col = DOSE,\n                      shape =\"by dose\")\n                  )+\n  geom_pointrange(data=ICGIlong.summaries.exposure,\n                  alpha=0.4,\n                  aes(x= medexp, y = meanresp,\n                      ymin =meanresp-1.96*SE,\n                      ymax =meanresp+1.96*SE,\n                      shape =\"by quartile\")\n                  )+\n  labs(shape=\"observed\\nprobability\")+\n  guides(shape = guide_legend(order=3,nrow=2,reverse = TRUE))\n```\n:::\n\nFinally we want to annotate the plot by displaying for each exptile the bin limits, the total N of subjects, the N of responders the probability of response. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nICGIlong.summaries.exposure <- ICGIlong.summaries.exposure %>% \n  mutate(label= ifelse(exptile!=\"Placebo\",\n                       paste0(exptile,\"\\n\",\"[\",round(minexp,0),\"-\",round(maxexp,0),\"]\",\n                             \"\\n\",N,\"\\n\",Ntot,\"\\n\",\n                              round(100*meanresp,1)),\n                       paste0(exptile,\"\\n\",\"\",\n                             \"\\n\",N,\"\\n\",Ntot,\"\\n\",\n                              round(100*meanresp,1))\n                       \n                       ),\n         \n         \n         ytext= 0.25)\np2txt <- p2 +\n  geom_text(data=ICGIlong.summaries.exposure,size = 1.5,\n            aes(x=meanexp ,label=label,y=ytext),inherit.aes = FALSE)+\n  facet_wrap(~expname,ncol=2,scales = \"free_x\")\n  \np2txt +\n  scale_y_continuous( \nbreaks = c(sort(unique(ICGIlong$keynumeric)), \nc(0, 0.25,  0.5,0.75, 1)),\nlabels = c(levels(ICGIlong$DOSE), \nc(\"0\", \"25%\", \"50%\",\"75%\",\"100%\")),\n             expand = expansion(mult = c(0.01, 0.01), \n                                add = c(0, 0))\n\n)+\nlabs(x=\"Exposure Values\",\n     y=\"Probability of Endpoint\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\nIn the `ggquickeda` package the `ggresponseexpdist` function automate a lot of these operations to be able to generate these advanced plots using concise syntax.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nICGIERDATA <- ICGI\nICGIERDATA$Endpoint <- \"ICGI\"\nICGIERDATA$response <- ICGIERDATA$ICGI \n\nggresponseexpdist(data = ICGIERDATA,\nmodel_type = \"logistic\",\nexposure_metrics = c(\"AUC\"),\nexposure_metric_split = \"quartile\",\nN_byexptile_ypos = \"with means\",\nmean_obs_bydose = TRUE,\nmean_obs_bydose_plac = FALSE,\nN_bydose_ypos = \"none\",\nmean_obs_bydose_text_size = 0,\nN_text_size = 3,\nexposure_distribution_percent = \"%\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}