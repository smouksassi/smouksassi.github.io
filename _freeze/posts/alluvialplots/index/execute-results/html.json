{
  "hash": "bc992650a6b5e741d40f6021eea2e09c",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Visualizing Transitions over Time\"\nauthor: \"Samer Mouksassi\"\ndate: \"2025-09-19\"\ncategories: [news, visualization]\nimage: \"alluvial.png\"\nformat:\n html:\n  code-fold: true\n---\n\nIn this post, I will cover visualizing longitudinal categorical data over time. I will start using a stacked barplot with percentages by category labels.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(tidyr)\nlibrary(dplyr)\nlibrary(patchwork)\nlibrary(ggrepel)\nlibrary(ggh4x)\nlibrary(ggalluvial)\nlibrary(scales)\nlibrary(farver)\n\nexample<- read.csv(\"example.csv\")\nexample$category <- as.factor(example$category)\n\nggplot(example, aes(x = time,fill=category,color=category)) +\n  geom_bar(alpha = 0.8,\n           aes(y = ((..count..)/tapply(..count..,..PANEL.., sum)[..PANEL..])),\n           position = position_fill(vjust = 0.5),\n           col=\"transparent\")+\n  geom_text(\n           aes(y = ((..count..)/tapply(..count.., ..PANEL..,sum)[..PANEL..]),\n               label = paste0(..count..,\n                        \"%\"\n                        )),\n              stat = \"count\", vjust = 0.5, hjust = 0.5,\n              size = 4, position = position_fill(vjust = 0.5)  ,\n              show.legend = FALSE,col=\"black\") +\n  scale_y_continuous(expand = expansion(mult=c(0,0),add = c(0,0)),\n                     labels = scales::percent_format(accuracy=1))+\n  scale_x_discrete(  expand = expansion(mult=c(0,0),add = c(0,0))) +\n  theme_bw(base_size =18)+\n  theme(panel.border = element_blank())+\n  labs(y=\"Percentage of Categories\",x=\"Time\")+\n  scale_y_discrete() +\n  theme(axis.text = element_text(size = 12))+\n  scale_fill_manual(\n    values=rev(c(\n      \"gray\",\"#2171B5\",\"#4292C6\", \"#9ECAE1\",\"#C6DBEF\")))+\n  scale_color_manual(\n    values=rev(c(\n      \"gray\",\"#2171B5\",\"#4292C6\", \"#9ECAE1\",\"#C6DBEF\")))+\n  scale_y_continuous(expand = expansion(mult=c(0,0),add = c(0,0)))+\n  scale_x_discrete(  expand = expansion(mult=c(0,0),add = c(0,0))) +\n  theme_bw(base_size =18)+\n  theme(panel.border = element_blank())\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-1.png){width=864}\n:::\n:::\n\n\nIt is often of interest to understand and visualize how individuals transition between categories over time. As such, we will augment the barplots by including flows using alluvial plots. Another small tweak is to let the percentage label color change depending on the contrasting background via `farver::decode_colour`. The \\`flows' are colored by the starting category.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(example, \n       aes(alluvium = ID, x = time , stratum = category)) + \n  geom_stratum( aes(fill=category,y=after_stat(prop)),decreasing = NA,alpha=0.8)  + \n  geom_flow(aes(fill=category),aes.flow = \"forward\",alpha = 0.8) +\n  geom_text_repel(stat = \"stratum\",\n                   aes(color = stage(category, after_scale = ifelse(\n                     decode_colour(alpha(color, 0.8),\"rgb\", \"hcl\")[, \"l\"] > 50,\n                     \"black\",\"white\")\n                   ),\n                   label = percent(after_stat(prop), accuracy = 1)),\n                   show.legend = FALSE,direction=\"y\")+\n  scale_y_discrete() +\n  theme_bw(base_size =18)+\n  theme(axis.text = element_text(size = 12))+\n  scale_fill_manual(\n    values=rev(c(\n      \"gray\",\"#2171B5\",\"#4292C6\", \"#9ECAE1\",\"#C6DBEF\")))+\n  scale_color_manual(\n  values=rev(c(\n    \"gray\",\"#2171B5\",\"#4292C6\", \"#9ECAE1\",\"#C6DBEF\")))+\n  scale_y_continuous(expand = expansion(mult=c(0,0),add = c(0,0)))+\n  scale_x_discrete(  expand = expansion(mult=c(0,0),add = c(0,0))) +\n  theme_bw(base_size =18)+\n  theme(panel.border = element_blank())+\n  labs(y=\"Percentage of Categories\",x=\"Time\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-2-1.png){width=864}\n:::\n:::\n\n\nThe previous plot showed the percentages in each category overall. Next we show the percentage undergoing each transition, coloring the flows the ending category.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(example , \n       aes(alluvium = ID, x = time, stratum = category)) + \n  geom_stratum( aes(fill=category,y=after_stat(prop)),alpha=0.8)  + \n  geom_flow(aes(fill=category),aes.flow = \"backward\" ,alpha=0.8) +\n  geom_text_repel(stat = \"flow\",\n                  aes(\n                    color = stage(category, after_scale = ifelse(\n                      decode_colour(alpha(color, 0.8),\"rgb\", \"hcl\")[, \"l\"] > 50,\n                      \"black\",\"white\")\n                    ),\n                  label = after_stat(\n                    scales::percent(\n                      ave(count, x, flow,PANEL, group, FUN = sum) /\n                        ave(count, x, flow,PANEL, FUN = sum),accuracy = 1) ),\n                                      hjust = after_stat(flow) == \"to\" \n  ),direction=\"y\",show.legend = FALSE)+\n    scale_y_discrete() +\n    theme_bw(base_size =18)+\n    theme(axis.text = element_text(size = 12))+\n    scale_fill_manual(\n      values=rev(c(\n        \"gray\",\"#2171B5\",\"#4292C6\", \"#9ECAE1\",\"#C6DBEF\")))+\n    scale_color_manual(\n      values=rev(c(\n        \"gray\",\"#2171B5\",\"#4292C6\", \"#9ECAE1\",\"#C6DBEF\")))+\n    scale_y_continuous(expand = expansion(mult=c(0,0),add = c(0,0)))+\n    scale_x_discrete(  expand = expansion(mult=c(0,0),add = c(0,0))) +\n    theme_bw(base_size =18)+\n    theme(panel.border = element_blank())+\n    labs(y=\"Percentage of Categories\",x=\"Time\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){width=864}\n:::\n:::\n\n\nNext, I try something different. I reshape the data and plot the current category to where it ended next by time point. The text show the numbers and direction of transition. At the first time point t1 there is no transition all data are on the diagonal. At time t2, the 31 data points that were at category 3 are now split into:\n\n-   4 at category 3,\n\n-    23 at category 4\n\n-    and 4 at category 5.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexample.trans<- example %>% \n  group_by(ID) %>% \n  mutate(category= as.double(category))%>% \n  mutate(prevcategory=lag(category))%>% \n  ungroup()\nexample.trans <- example.trans %>% \n  group_by(time,category, prevcategory) %>%  \n  summarise(N=n()) %>% \n  ungroup()\nexample.trans <- example.trans %>% \n  mutate(prevDV=ifelse(time==0,category,prevcategory))%>% \n  complete(time = c(\"t1\" ,\"t2\", \"t3\" ,\"t4\", \"t5\" ,\"t6\"),\n           prevcategory=  1:6,\n           category=      1:6,\n           fill=list(N=0))\n\n\nexample.trans %>% \n  mutate(prevcategory=ifelse(time==\"t1\",category,prevcategory))%>% \n  mutate( transsign= ifelse(category-prevcategory>0,\"increase\",\n                     ifelse(category-prevcategory==0,\"no change\",\"decrease\"))\n  )%>% \n  filter(!is.na(prevcategory),N!=0)%>% \n  mutate(transsign= factor(transsign,levels = c(\"decrease\",\"no change\",\"increase\")))%>% \n  ggplot(.,aes(category,prevcategory,label=N))+\n  geom_abline(color=\"gray\")+\n  geom_text(alpha=1,aes(colour=transsign, size=N),\n            show.legend = c( colour = TRUE,size = FALSE) \n            )+\n  facet_wrap( ~ time,\n               labeller = labeller(time= label_both),ncol=3,\n               dir=\"lt\" )+\n  scale_x_continuous(breaks=c(1,2,3,4,5,6,7))+\n  scale_y_continuous(breaks=c(1,2,3,4,5,6,7))+\n  theme_bw(base_size = 22)+\n  theme(strip.placement = \"outside\",strip.text.y.left = element_text(angle=0),\n        legend.position = \"right\",\n        aspect.ratio = 1,\n        strip.background = element_rect(fill = \"#475c6b90\"), \n        strip.text = element_text(face = \"bold\",color = \"white\"))+\n  labs(y=\"previous category\",x=\"category\",size=\"N\\nTransitions\",\n       color=\"Transitions\\nDirection\")+\n  scale_size(range=c(4,10))+\n  coord_cartesian(clip=\"off\")+ \n  guides(colour = guide_stringlegend(ncol = 1))+\n  scale_color_viridis_d()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=864}\n:::\n:::\n\n\nWith this post, I covered some techniques that can be useful to visualize longitudinal categorical data and set the stage for advanced modeling techniques such as multi-state markovian models.\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}